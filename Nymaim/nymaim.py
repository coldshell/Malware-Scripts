#!/usr/bin/python2
from core.sandbox import Sandbox_Win_x86_32_Nymaim
from core.emulation import Emu
from core.ida import Ida
from core.color import Color

def usage():
    """Usage"""

    parser = Sandbox_Win_x86_32_Nymaim.parser(description="PE sandbox")
    parser.add_argument("input", help="Obfuscated version of Nymaim binary")
    parser.add_argument("--ida", action="store_true", help="Generates an IDA script to rename identified functions")
    return parser.parse_args()

def main():
    """Main"""

    # Init
    options = usage() 
    emu = Emu(options)

    # Deobfuscation
    emu.deobf_push_reg()
    emu.deobf_detour_call()
    emu.deobf_detour_jmp()

    # Generation of IDA script
    if options.ida:
        ida = Ida(emu)
        ida.dump(options.input + "_ida.py")

    # Create the deobfuscated version
    clean = options.input + ".clean" 
    print Color.step("Patched nymaim available: {}".format(clean))
    open(clean, 'wb').write(str(emu.sb.pe))

if __name__ == "__main__":

    main()